server.port=7009
#值为pre对应配置文件名application-pre.properties，用于多环境间的切换
spring.profiles.active=


#oracle连接
spring.datasource.oracle.driver-class-name:oracle.jdbc.driver.OracleDriver
spring.datasource.oracle.url:jdbc:oracle:thin:@127.0.0.1:1521:xe
spring.datasource.oracle.username:system
spring.datasource.oracle.password:system
#mysql连接
spring.datasource.mysql.driver-class-name:com.mysql.jdbc.Driver
spring.datasource.mysql.url:jdbc:mysql://127.0.0.1:3306/bootdemo?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.mysql.username:root
spring.datasource.mysql.password:admin
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.mysql.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.mysql.initialSize=5
spring.datasource.mysql.minIdle=1
spring.datasource.mysql.maxActive=50
# 配置获取连接等待超时的时间
spring.datasource.mysql.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.mysql.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.mysql.minEvictableIdleTimeMillis=300000
spring.datasource.mysql.validationQuery=SELECT 1 FROM DUAL
spring.datasource.mysql.testWhileIdle=true
spring.datasource.mysql.testOnBorrow=false
spring.datasource.mysql.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.mysql.poolPreparedStatements=false
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.mysql.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.mysql.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.mysql.useGlobalDataSourceStat=true


spring.mail.host=smtp.163.com
spring.mail.username=
spring.mail.password=
spring.mail.default-encoding=UTF-8

mail.fromMail.addr=pgx9411@163.com

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=30000

